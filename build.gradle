plugins {
  id 'org.springframework.boot' version '2.2.0.RELEASE'
  id 'io.spring.dependency-management' version '1.0.8.RELEASE'
  id 'java'
  id 'jacoco'
  id 'checkstyle'
 }

group = 'com.mempoolexplorer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
  set('springCloudVersion', "Hoxton.RC1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-quartz'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	
	
  	testImplementation('org.springframework.boot:spring-boot-starter-test') {
    	exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  	}
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	
		
	//Librerias que convendr√≠a quitar
	implementation 'com.google.guava:guava:28.1-jre'
	implementation 'org.apache.commons:commons-lang3:3.9'
	implementation 'org.apache.commons:commons-collections4:4.1'
	
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

test {
  useJUnitPlatform()
}

//Si no pasamos del 20% de cobertura esto falla
jacocoTestCoverageVerification	{
	violationRules	{
		rule	{
			limit	{
				minimum	=	0.2
			}
		}
	}
}

//Fichero raiz del plugin checkstyle
checkstyle {
        configFile = rootProject.file('./checkstyle.xml')
    }

bootJar {
    baseName = 'bitcoindAdapter'
    version =  '0.0.1-SNAPSHOT'
}

//compileJava.dependsOn(processResources)